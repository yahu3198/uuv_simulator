
classdef GetModelPropertiesResponse < ros.Message
    %GetModelPropertiesResponse MATLAB implementation of uuv_gazebo_ros_plugins_msgs/GetModelPropertiesResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'uuv_gazebo_ros_plugins_msgs/GetModelPropertiesResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '222d64ab6fa46c24f1abd065170ebe7a' % The MD5 Checksum of the message definition
        PropertyList = { 'Models' 'LinkNames' } % List of non-constant message properties
        ROSPropertyList = { 'models' 'link_names' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.uuv_gazebo_ros_plugins_msgs.UnderwaterObjectModel' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Models
        LinkNames
    end
    methods
        function set.Models(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.uuv_gazebo_ros_plugins_msgs.UnderwaterObjectModel.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.uuv_gazebo_ros_plugins_msgs.UnderwaterObjectModel'};
            validateattributes(val, validClasses, validAttributes, 'GetModelPropertiesResponse', 'Models')
            obj.Models = val;
        end
        function set.LinkNames(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'cell', 'string'};
            if isempty(val)
                % Allow empty [] input
                val = cell.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'GetModelPropertiesResponse', 'LinkNames');
            obj.LinkNames = cell(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.uuv_gazebo_ros_plugins_msgs.GetModelPropertiesResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.uuv_gazebo_ros_plugins_msgs.GetModelPropertiesResponse(strObj);
        end
    end
end
